package com.example.booleancatastrophe.model;


import android.util.Log;

import androidx.annotation.NonNull;

import com.google.android.gms.tasks.OnFailureListener;
import com.google.android.gms.tasks.OnSuccessListener;
import com.google.firebase.Timestamp;
import com.google.firebase.firestore.CollectionReference;
import com.google.firebase.firestore.DocumentReference;
import com.google.firebase.firestore.FirebaseFirestore;

import java.util.ArrayList;
import java.util.HashMap;

/** This class handles the database operations related to experiment forums */
public class ForumManager {

    private static ForumManager forumManager = null;

    private FirebaseFirestore db;
    private CollectionReference forumpostRef;
    private static final String TAG = "Forum Manager";

    private HashMap<String, Object> d;

    /* Private constructor - singleton design pattern */
    private ForumManager() {
        this.db = FirebaseFirestore.getInstance();
        this.forumpostRef = db.collection("forumposts");
        d = new HashMap<>();    // Be sure to clear this before sending database data mappings
    }

    /* Gets the singleton instance of this manager class - lazy construction */
    public static ForumManager getInstance() {
        if(forumManager == null) {
            forumManager = new ForumManager();
        }
        return forumManager;
    }

    /** Add a forum post to the database - id will be created automatically
     * @param forumPost
     * The post to add to the database
     **/
    public void addForumPost(ForumPost forumPost) {
        DocumentReference docRef = forumpostRef.document();
        // Set forum post id after it has been generated by Firestore
        forumPost.setId(docRef.getId());

        // Construct the structure of the data entry to put into the database
        d.clear();
        d.put("id", forumPost.getId());
        d.put("date", new Timestamp(forumPost.getDatePosted()));
        d.put("experimentID", forumPost.getExperimentID());
        d.put("posterID", forumPost.getPosterID());
        d.put("content", forumPost.getContent());
        // If the forum post is a question, send its array of reply ids to the database
        if(ForumPost.class.isAssignableFrom(ForumQuestion.class)) {
            ForumQuestion question = (ForumQuestion) forumPost;
            d.put("replies", question.getReplyIds());
        } else {
            d.put("replies", null);
        }

        docRef.set(d)
                .addOnSuccessListener(new OnSuccessListener<Void>() {
                    @Override
                    public void onSuccess(Void aVoid) {
                        Log.d(TAG, "Successfully added forum post");

                    }
                })
                .addOnFailureListener(new OnFailureListener() {
                    @Override
                    public void onFailure(@NonNull Exception e) {
                        Log.w(TAG, "Error adding forum post");
                    }
                });
    }






}
